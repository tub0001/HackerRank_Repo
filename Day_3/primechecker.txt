import static java.lang.System.in;
class Prime{

    public void checkPrime(int... integers)
    {
        
        for (int p : integers) 
    {
            if(p==2)
            System.out.print(p+" ");
        else if(p%2 != 0 && p != 1)
        {
            int flag=0;
            for(int i=3;i<=(p-1)/2;i++){
                if(p%i==0)
                {
                    flag=1;
                    break;
                }
            }
            if(flag==0)
                System.out.print(p+" ");
        }
        else
            System.out.print("");

    }
    System.out.println("");
    }//checkprime
}
public class Solution {

	public static void main(String[] args) {
		try{
		BufferedReader br=new BufferedReader(new InputStreamReader(in));
		int n1=Integer.parseInt(br.readLine());
		int n2=Integer.parseInt(br.readLine());
		int n3=Integer.parseInt(br.readLine());
		int n4=Integer.parseInt(br.readLine());
		int n5=Integer.parseInt(br.readLine());
		Prime ob=new Prime();
		ob.checkPrime(n1);
		ob.checkPrime(n1,n2);
		ob.checkPrime(n1,n2,n3);
		ob.checkPrime(n1,n2,n3,n4,n5);	
		Method[] methods=Prime.class.getDeclaredMethods();
		Set<String> set=new HashSet<>();
		boolean overload=false;
		for(int i=0;i<methods.length;i++)
		{
			if(set.contains(methods[i].getName()))
			{
				overload=true;
				break;
			}
			set.add(methods[i].getName());
			
		}
		if(overload)
		{
			throw new Exception("Overloading not allowed");
		}
		}
		catch(Exception e)
		{
			System.out.println(e);
		}
	}
	
}